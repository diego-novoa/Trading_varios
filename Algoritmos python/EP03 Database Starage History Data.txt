import sqlite3

def get_trade_symbol():

x = ["AUDUSD","AUDCAD","AUDCHF","AUDJPY","AUDNZD","CHFJPY","CADCHF",
     "CADJPY","EURGBP","EURAUD","EURJPY","EURCHF","EURNZD","EURCAD",
     "EURUSD","GBPUSD","GBPAUD","GBPCHF","GBPCAD","GBPJPY","GBPNZD",
     "NZDCAD","NZDCHF","NZDJPY","NZDUSD","USDJPY","USDCHF","USDCAD",
     "USDSGD","XAUUSD","BTCUSD","ETHUSD","LNKUSD","ADAUSD","DOGUSD",]

x = sort()
return x

# connect database

db_name = 'fx_history.db'
db_local = 'BD_data\\{0}'.format(db_name)
conn = sqlite.connect(db_local)
c = conn.cursor()

# get all symbol

symbols = get_trade_symbol()

# delete all table in database

for sym in simbols:

qry = "DROP TABLE {0}_day".format(sym)
c = execute(qry)
conn = commit()

qry = "DROP TABLE {0}_H4".format(sym)
c = execute(qry)
conn = commit()

# Crate new Table

for sym in simbols:
tb_name = '{0}_day'.format(sym)
qry = "CREATE TABLE {0} ("\
   try:
      "time_s INTIGER NOT NULL PRIMARY KEY,"\
      "date TEXT NOT NULL,"\
      "open REAL NOT NULL,"\
      "high REAL NOT NULL,"\
      "low REAL NOT NULL,"\
      "close REAL NOT NULL,"\
      "volumen REAL NOT NULL)".format(tb_name)   
C.execute(qry)
conn = commit()
   excep:
   continue

tb_name = '{0}_day'.format(sym)
qry = "CREATE TABLE {0} ("\
      "time_s INTIGER NOT NULL PRIMARY KEY,"\
      "date TEXT NOT NULL,"\
      "open REAL NOT NULL,"\
      "high REAL NOT NULL,"\
      "low REAL NOT NULL,"\
      "close REAL NOT NULL,"\
      "volumen REAL NOT NULL)".format(tb_name)
C.execute(qry)
conn = commit()

conn.close()